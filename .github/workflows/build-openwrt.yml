name: Build OpenWrt

on:
  schedule:
    - cron: "0 22 * * *"
  push:
    branches:
      - master

env:
  BOARD: "ramips"
  SUBTARGET: "mt7621"
  PROFILE: "xiaomi_redmi-router-ac2100"
  PACKAGES_TYPE1: "luci-app-yggdrasil yggdrasil luci wpad-mesh-wolfssl iperf3 mtr iwinfo kmod-tcp-bbr kmod-mtd-rw libustream-wolfssl ca-bundle -luci-proto-ppp -ppp -ppp-mod-pppoe -kmod-pppox -kmod-pppoe -kmod-ppp -wpad-basic-wolfssl"
  PACKAGES_TYPE2: "frps luci-app-frps luci-app-ttyd ttyd luci-app-shadowsocks-libev shadowsocks-libev-ss-server luci wpad-mesh-wolfssl iperf3 iwinfo kmod-tcp-bbr kmod-mtd-rw libustream-wolfssl ca-bundle -odhcpd-ipv6only -dnsmasq -luci-proto-ppp -ppp -ppp-mod-pppoe -kmod-pppox -kmod-pppoe -kmod-ppp -wpad-basic-wolfssl"
  PACKAGES_TYPE3: "adblock	aria2 frps collectd collectd-mod-cpu	collectd-mod-interface	collectd-mod-iwinfo	collectd-mod-load	collectd-mod-memory	collectd-mod-network	collectd-mod-rrdtool curl	ddns-scripts	ddns-scripts-services kmod-wireguard luci-app-frps luci-app-ttyd ttyd lua	luci luci-app-shadowsocks-libev shadowsocks-libev-ss-server luci wpad-mesh-wolfssl luci-app-adblock	luci-app-advanced-reboot	luci-app-aria2	luci-app-ddns	luci-app-diag-core	luci-app-firewall	luci-app-openvpn	luci-app-opkg	luci-app-qos	luci-app-sqm	luci-app-statistics	luci-app-travelmate	luci-app-wifischedule iperf3	luci-proto-ipv6	luci-proto-ppp	luci-proto-wireguard	luci-ssl	luci-theme-bootstrap	luci-theme-material	luci-theme-openwrt-2020	netperf	nft-qos	qos-scripts iwinfo kmod-tcp-bbr kmod-mtd-rw libustream-wolfssl ca-bundle -odhcpd-ipv6only -dnsmasq -luci-proto-ppp -ppp -ppp-mod-pppoe -kmod-pppox -kmod-pppoe -kmod-ppp -wpad-wolfssl speedtest-netperf	sqm-scripts	sqm-scripts-extra	swconfig	terminfo	travelmate uhttpd	uhttpd-mod-ubus	wifischedule	wireguard-tools	wireless-tools	zlib	minidlna	luci-app-minidlna	samba4-server	luci-app-samba4"

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir

    - name: Download imagebuilder
      working-directory: /mnt/workdir
      run: |
        curl -O "https://downloads.openwrt.org/snapshots/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/openwrt-imagebuilder-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64.tar.xz"
        tar xvaf openwrt-imagebuilder-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64.tar.xz
        ln -sf /mnt/workdir/openwrt-imagebuilder-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64 $GITHUB_WORKSPACE/openwrt
 
    - name: Download version info
      run: |
        curl -O "https://downloads.openwrt.org/snapshots/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/version.buildinfo"
        echo "OPENWRT_VERSION=$(cat version.buildinfo)" >> $GITHUB_ENV
        
    - name: Build the image of type 1
      id: type1
      run: |
        cd openwrt
        make image PROFILE="${{ env.PROFILE }}" PACKAGES="${{ env.PACKAGES_TYPE1 }}"
        mv bin/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade.bin openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type1.bin

    - name: Build the image of type 2
      id: type2
      run: |
        cd openwrt
        make image PROFILE="${{ env.PROFILE }}" PACKAGES="${{ env.PACKAGES_TYPE2 }}"
        mv bin/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade.bin openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type2.bin

    - name: Build the image of type 3
      id: type3
      run: |
        cd openwrt
        make image PROFILE="${{ env.PROFILE }}" PACKAGES="${{ env.PACKAGES_TYPE3 }}"
        mv bin/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade.bin openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type3.bin
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.OPENWRT_VERSION }}
        release_name: OpenWrt ${{ env.OPENWRT_VERSION }}
        body: |
          This release is based on OpenWrt snapshot ${{ env.OPENWRT_VERSION }}.
          
          Type1 is built with these packages: "${{ env.PACKAGES_TYPE1 }}"
          
          Type2 is built with these packages: "${{ env.PACKAGES_TYPE2 }}"
          
          Type3 is built with these packages: "${{ env.PACKAGES_TYPE3 }}"
        draft: false
        prerelease: false

    - name: Upload type1 Asset
      id: upload-release-asset-type1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: openwrt/openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type1.bin
        asset_name: openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type1.bin
        asset_content_type: application/bin
        
    - name: Upload type2 Asset
      id: upload-release-asset-type2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: openwrt/openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type2.bin
        asset_name: openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type2.bin
        asset_content_type: application/bin

    - name: Upload type3 Asset
      id: upload-release-asset-type3
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: openwrt/openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type3.bin
        asset_name: openwrt-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-sysupgrade-type3.bin
        asset_content_type: application/bin
